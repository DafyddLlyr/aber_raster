{"version":3,"file":"index.7605611d.js","sources":["../../vite/modulepreload-polyfill","../../main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import './style.css';\nimport Map from 'ol/Map';\nimport OSM from 'ol/source/OSM';\nimport TileLayer from 'ol/layer/Tile';\nimport View from 'ol/View';\nimport WMTS from 'ol/source/WMTS';\nimport WMTSTileGrid from 'ol/tilegrid/WMTS';\nimport {get as getProjection} from 'ol/proj';\nimport {getTopLeft, getWidth} from 'ol/extent';\nimport {optionsFromCapabilities} from 'ol/source/WMTS';\n\nconst projection = getProjection('EPSG:3857');\nconst projectionExtent = projection.getExtent();\nconst size = getWidth(projectionExtent) / 256;\nconst resolutions = new Array(19);\nconst matrixIds = new Array(19);\nfor (let z = 0; z < 19; ++z) {\n  // generate resolutions and matrixIds arrays for this WMTS\n  resolutions[z] = size / Math.pow(2, z);\n  matrixIds[z] = z;\n}\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    new TileLayer({\n      opacity: 0.7,\n      crossOrigin: 'anonymous',\n      source: new WMTS({\n        url: 'http://lle.gov.wales/services/tiles/lidar/wmts',\n        layer: '50cm_dsm',\n        matrixSet: 'GoogleMapsCompatible',\n        format: 'image/jpg',\n        projection: projection,\n        tileGrid: new WMTSTileGrid({\n          origin: getTopLeft(projectionExtent),\n          resolutions: resolutions,\n          matrixIds: matrixIds,\n        }),\n        style: 'default',\n        wrapX: true,\n      }),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [-11158582, 4813697],\n    zoom: 4,\n  }),\n});"],"names":["getProjection"],"mappings":"iGAAA,KAAM,GAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,IC/BtB,KAAM,GAAaA,EAAc,aAC3B,EAAmB,EAAW,YAC9B,EAAO,EAAS,GAAoB,IACpC,EAAc,GAAI,OAAM,IACxB,EAAY,GAAI,OAAM,IAC5B,OAAS,GAAI,EAAG,EAAI,GAAI,EAAE,EAExB,EAAY,GAAK,EAAO,KAAK,IAAI,EAAG,GACpC,EAAU,GAAK,EAGL,GAAI,GAAI,CAClB,OAAQ,CACN,GAAI,GAAU,CACZ,OAAQ,GAAI,KAEd,GAAI,GAAU,CACZ,QAAS,GACT,YAAa,YACb,OAAQ,GAAI,GAAK,CACf,IAAK,iDACL,MAAO,WACP,UAAW,uBACX,OAAQ,YACR,WAAY,EACZ,SAAU,GAAI,GAAa,CACzB,OAAQ,EAAW,GACnB,YAAa,EACb,UAAW,IAEb,MAAO,UACP,MAAO,QAIb,OAAQ,MACR,KAAM,GAAI,GAAK,CACb,OAAQ,CAAC,UAAW,SACpB,KAAM"}