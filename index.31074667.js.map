{"mappings":"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","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/source/WMTSRequestEncoding.js","node_modules/ol/src/uri.js","node_modules/ol/src/tilegrid/WMTS.js","node_modules/ol/src/source/WMTS.js","node_modules/ol/src/xml.js","node_modules/ol/src/format/XML.js","node_modules/ol/src/format/xlink.js","node_modules/ol/src/format/xsd.js","node_modules/ol/src/format/OWS.js","node_modules/ol/src/format/WMTSCapabilities.js","main.ts"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST', // see spec §10\n};\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [opt_extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [opt_matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  opt_extent,\n  opt_matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {appendParams} from '../uri.js';\nimport {assign} from '../obj.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\nimport {find, findIndex, includes} from '../array.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined\n        ? /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (\n            options.requestEncoding\n          )\n        : WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n      assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == WMTSRequestEncoding.KVP\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': tileCoord[2],\n          };\n          assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == WMTSRequestEncoding.KVP) {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function (elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        const tileMatrixSet = find(tileMatrixSets, function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        } else {\n          return supportedCRS == config['projection'];\n        }\n      });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function (elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function (elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = find(\n      matrixSetObj.TileMatrix,\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchOriginXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  const matrixSetExtent = matrixSetObj['BoundingBox'];\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      []\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","import Map from 'ol/Map';\nimport OSM from 'ol/source/OSM';\nimport TileLayer from 'ol/layer/Tile';\nimport View from 'ol/View';\nimport WMTS, { optionsFromCapabilities } from 'ol/source/WMTS';\nimport WMTSCapabilities from 'ol/format/WMTSCapabilities';\n\nconst parser = new WMTSCapabilities();\n\nfetch('https://lle.gov.wales/services/tiles/lidar/wmts')\n  .then(function (response) {\n    return response.text();\n  })\n  .then(function (text) {\n    const result = parser.read(text);\n    const options = optionsFromCapabilities(result, {\n      layer: '50cm_dsm',\n    });\n\n    const map = new Map({\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n        }),\n        new TileLayer({\n          source: new WMTS(options)\n        }),\n      ],\n      target: 'map',\n      view: new View({\n        center: [-455029.629382, 6874593.449912],\n        zoom: 16,\n      }),\n    });\n  });"],"names":["$198f17545c774c60$export$2e2bcd8739ae039","Disposable","this","disposed","prototype","dispose","disposeInternal","$242d04b4abe8e74a$export$4e734a3b32fb971b","a","b","$242d04b4abe8e74a$export$8a3786cc03fdb777","arr","target","direction","n","length","i","$242d04b4abe8e74a$export$8b58be045bf06082","data","extension","Array","isArray","$242d04b4abe8e74a$export$71aa6c912b956294","func","value","$242d04b4abe8e74a$export$e9bab7fafb253603","arr1","arr2","len1","$242d04b4abe8e74a$export$de3a4d4a0d731119","index","every","el","idx","$e8bb49b0723cf385$export$22e23a2304399231","$e8bb49b0723cf385$export$8f11cee4bdc7e668","$e8bb49b0723cf385$export$1cd1943b3a73bbe8","$b72bee802ee7837c$export$817eb92a8194bab0","Error","$b72bee802ee7837c$var$uidCounter_","$b72bee802ee7837c$export$5e82334337e0f204","obj","ol_uid","String","$b72bee802ee7837c$export$a4ad2735b021c132","$557f882b5755ab40$var$ua","navigator","userAgent","toLowerCase","$557f882b5755ab40$export$8442bdfd18b7b8a6","indexOf","$557f882b5755ab40$export$39dfd62a25e0fe93","$557f882b5755ab40$export$76c0a3b101d93136","$557f882b5755ab40$export$6b83a0446fc26f94","devicePixelRatio","$557f882b5755ab40$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$557f882b5755ab40$export$716f8695eedb9bad","Image","decode","$557f882b5755ab40$export$f751ce96c6c4e4fc","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$d51b57da984548f6$export$2e2bcd8739ae039","_super","AssertionError","code","_this","message","split","call","name","$d51b57da984548f6$var$__extends","$260eb39d4574b27d$export$a7a9523472993e97","assertion","errorCode","$d51b57da984548f6$exports","default","$67dae15869f57ba2$var$transformStringDiv","$67dae15869f57ba2$export$5635d7ef4b8fee1c","transform","coordinate","x","y","$67dae15869f57ba2$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$67dae15869f57ba2$export$bd70ea2a93c0fa4","source","mat","det","c","d","e","f","$67dae15869f57ba2$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","style","$42857dc1e4e39ae1$export$2e2bcd8739ae039","$2034d68cc04dd519$export$2e2bcd8739ae039","$09aee13076acae13$export$8aceca7c77505534","coordinates","extent","$09aee13076acae13$export$fe201bb3bbe031e9","ii","$09aee13076acae13$export$1f820e3920fa5715","$09aee13076acae13$export$cbe64c389534206f","dx","dy","$09aee13076acae13$export$ac68c24d37ca240f","$09aee13076acae13$export$805bdfd6d6690e97","$09aee13076acae13$export$be866b1e0809b17e","extent1","extent2","$09aee13076acae13$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$09aee13076acae13$export$958e3e1a02eac4b6","opt_extent","$09aee13076acae13$export$3e2152b047719fa1","$09aee13076acae13$export$e9bab7fafb253603","$09aee13076acae13$export$30570204156ffd18","flatCoordinates","offset","end","stride","$09aee13076acae13$export$f1dab130b92b85a9","min","max","$09aee13076acae13$export$f9ed8a3d123a08e2","callback","val","$09aee13076acae13$export$8d09f5e2e1bf560d","$09aee13076acae13$export$e77c1cf70445e168","$09aee13076acae13$export$b84fa077c8b05295","$09aee13076acae13$export$cb1538b07e6964ff","$09aee13076acae13$export$520c40045967cb15","area","$09aee13076acae13$export$dd1bc94b04021eeb","$09aee13076acae13$export$3c49c185de0c2bfc","$09aee13076acae13$export$c08559766941f856","$09aee13076acae13$export$c91255cadecfe081","$09aee13076acae13$export$a1cfd206661d0801","corner","$09aee13076acae13$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$09aee13076acae13$export$72209efa88586d42","intersection","$09aee13076acae13$export$7b0a31e10bbff018","$09aee13076acae13$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$09aee13076acae13$var$_boundingExtentXYs","$171e0dde495a42af$export$7d15b64cf5a3a4c4","$171e0dde495a42af$export$2e2fd1ad24e4d350","cosh","exp","$171e0dde495a42af$export$b9fae0bba9d9094d","log2","log","LOG2E","$171e0dde495a42af$export$251bb0a9cef172e6","t","$171e0dde495a42af$export$88e6ebb4fe54f538","$171e0dde495a42af$export$56cb859c01fa134d","angleInRadians","PI","$171e0dde495a42af$export$cba01ba138429a1d","angleInDegrees","$171e0dde495a42af$export$ba467bec01d66def","r","$171e0dde495a42af$export$3a89f8d6f6bf6c9f","$50211efa3313caf5$var$HEX_COLOR_RE_","$50211efa3313caf5$var$NAMED_COLOR_RE_","$50211efa3313caf5$export$590567be997858b6","color","g","undefined","$50211efa3313caf5$export$f84e8e69fd4488a5","$50211efa3313caf5$var$fromNamed","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$50211efa3313caf5$export$a3295358bff77e","$2d3f65ee78aa7b11$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","key","iconImage","hasListener","src","crossOrigin","$2d3f65ee78aa7b11$var$getKey","set","setSize","maxCacheSize","$2d3f65ee78aa7b11$export$747ccdf771a87ab8","$23cc37b221334df5$export$2e2bcd8739ae039","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$f182d89dddef1ea8$export$2e2bcd8739ae039","$d57f519927fa72cd$export$e6e34fd1f2686227","assign","var_sources","TypeError","output","arguments","hasOwnProperty","$d57f519927fa72cd$export$42ffd38884aecdac","object","property","$d57f519927fa72cd$export$a5c4301012ad6f07","values","$d57f519927fa72cd$export$dd1bc94b04021eeb","$ca140b686b49c1e3$export$2e2bcd8739ae039","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$ca140b686b49c1e3$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","splice","$17528e13835ea298$export$2e2bcd8739ae039","$ddbfda1fb7b83a89$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$ddbfda1fb7b83a89$export$8d2a95bc11b44725","$ddbfda1fb7b83a89$export$b0a21c8b3c1c921","$b205a5a0a479f629$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$b205a5a0a479f629$var$__extends","changed","getRevision","len","ol_key","$b205a5a0a479f629$export$b7ef3f8527533384","$ca140b686b49c1e3$exports","$b205a5a0a479f629$export$2e2bcd8739ae039","$02ff1a30291f579c$export$cf395d7c4a2d5a17","ObjectEvent","oldValue","$02ff1a30291f579c$var$__extends","$02ff1a30291f579c$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$b205a5a0a479f629$exports","$de08933662e889cc$export$2e2bcd8739ae039","$abe2849bf275faed$export$2e2bcd8739ae039","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$abe2849bf275faed$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$02ff1a30291f579c$exports","$6afba345795dd0eb$export$2e2bcd8739ae039","$10a428a553b91e25$export$2e2bcd8739ae039","$3f598d8186f667d5$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$3f598d8186f667d5$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","handleSourcePropertyChange_","setSource","$3f598d8186f667d5$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$abe2849bf275faed$exports","$9c25d20f9d7ab135$export$e9bab7fafb253603","coordinate1","coordinate2","equals","$9c25d20f9d7ab135$export$bb628a54ab399bc9","cosAngle","sinAngle","$9c25d20f9d7ab135$export$24e2b27d1ff0c1d5","projection","opt_sourceExtentWidth","projectionExtent","worldsAway","canWrapX","sourceExtentWidth","floor","$4d624cc5d18fde9b$var$expireIconCache","$4d624cc5d18fde9b$export$2e2bcd8739ae039","MapRenderer","map_","$4d624cc5d18fde9b$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","worldWidth","$9c25d20f9d7ab135$export$39a9ce3624977b84","slice","offsets","layerStates","numLayers","matches","tmpCoord","i1","j","layer1","$3f598d8186f667d5$exports","inView","getWrapX","callback_1","order","forEach","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$38088ea21604ea9d$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$38088ea21604ea9d$var$__extends","$71fff7b7ffdcca6e$export$981241db82723ce2","$71fff7b7ffdcca6e$export$4d4f8be70b656192","$71fff7b7ffdcca6e$export$e16017ac68d14492","$71fff7b7ffdcca6e$var$fontRegEx","RegExp","$71fff7b7ffdcca6e$var$fontRegExMatchIndex","$71fff7b7ffdcca6e$export$5abde8a6aec4a131","fontSpec","match","lineHeight","weight","variant","families","family","$71fff7b7ffdcca6e$export$52ec625a6a53b6a6","$da5bbe25d8fad2eb$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$da5bbe25d8fad2eb$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$da5bbe25d8fad2eb$export$1d0aa160432dfea5","$f3299d0ba5b570c1$export$1d36981fcadac93b","console","warn","$f3299d0ba5b570c1$var$measureFont","$f3299d0ba5b570c1$var$measureContext","$f3299d0ba5b570c1$export$7fdcec604f0b1fa7","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$f3299d0ba5b570c1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","$f3299d0ba5b570c1$var$measureText","measureText","$d8a652e4527f1969$export$2e2bcd8739ae039","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","position","$71fff7b7ffdcca6e$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$d8a652e4527f1969$var$__extends","event_1","$38088ea21604ea9d$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$da5bbe25d8fad2eb$export$caeacfe04f52533a","display","getDataAtPixel","$4d624cc5d18fde9b$exports","$d9a0ab5d45e10d29$export$2e2bcd8739ae039","$55a45667519a063f$var$Property","$55a45667519a063f$export$a87ae6eb2761ec6d","CollectionEvent","opt_element","opt_index","$55a45667519a063f$var$__extends","$55a45667519a063f$export$2e2bcd8739ae039","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$fbe1f30b9b0811de$var$Property","$fbe1f30b9b0811de$export$2e2bcd8739ae039","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$55a45667519a063f$exports","setLayers","$fbe1f30b9b0811de$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$51fcb9efdec94cd2$export$2e2bcd8739ae039","MapEvent","$51fcb9efdec94cd2$var$__extends","$dcc91a0eaf5c85b1$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$dcc91a0eaf5c85b1$var$__extends","getEventPixel","getCoordinateFromPixel","$51fcb9efdec94cd2$exports","$fb224f2039acedbe$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$f7f6b6491b2890ed$export$2e2bcd8739ae039","$308a4eee2e11ac9e$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$308a4eee2e11ac9e$var$__extends","emulateClick_","pointerEvent","newEvent1","$dcc91a0eaf5c85b1$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$a85542ba6ee181e9$export$2e2bcd8739ae039","$66376b6b243d2dc1$export$2e2bcd8739ae039","$dac38e077a8a1495$export$b4af72c40fd57063","$dac38e077a8a1495$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$b60da4fc04596e98$export$2e2bcd8739ae039","$286f240d744f313a$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$286f240d744f313a$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$286f240d744f313a$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$5a8dbd971169bbba$export$2e2bcd8739ae039","$02478b6026332846$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$02478b6026332846$export$1482081eec883108","$02478b6026332846$export$2e2bcd8739ae039","$282e8a7f99c41353$export$2e2bcd8739ae039","$c80cb2b125b4e0d9$export$2e2bcd8739ae039","$6f70a5e237bbd780$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","$a0a3dd962f5651db$export$2d2c9be8b5b863f","$a0a3dd962f5651db$export$f3928063e5e96d35","$a0a3dd962f5651db$export$21e6da8a7375dfe8","$a0a3dd962f5651db$export$ae9d6ed80df710e5","$a0a3dd962f5651db$export$d26945d1ad52feeb","tan","$a0a3dd962f5651db$var$EPSG3857Projection","EPSG3857Projection","point","$a0a3dd962f5651db$var$__extends","$a0a3dd962f5651db$export$b508d7ad9a891c1b","$a0a3dd962f5651db$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$a0a3dd962f5651db$export$8c71322ec28ed6b4","atan","$c0e91db6b9cdad65$export$21e6da8a7375dfe8","$c0e91db6b9cdad65$export$1482081eec883108","$c0e91db6b9cdad65$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$c0e91db6b9cdad65$var$__extends","$c0e91db6b9cdad65$export$b508d7ad9a891c1b","$fa1fc08946082439$var$cache","$93a9ea042b1bc378$var$transforms","$93a9ea042b1bc378$export$e16d8520af44a096","destination","sourceCode","destinationCode","$1f8fb04b1e88a5cd$export$63f2df7bd7371262","$1f8fb04b1e88a5cd$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$1f8fb04b1e88a5cd$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$51ce273c1692e987$export$dd516654c5f598fb","$51ce273c1692e987$export$83e8ab53904f8022","$51ce273c1692e987$export$59ae956cd3e343f7","$fa1fc08946082439$export$e16d8520af44a096","$51ce273c1692e987$export$3988ae62b71be9a3","projectionLike","replace","$51ce273c1692e987$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$51ce273c1692e987$export$e3c4995a701c26a3","vertices","$51ce273c1692e987$export$eeb8392580a05a37","projections","$51ce273c1692e987$export$638ad73f7aafb913","$51ce273c1692e987$export$549167224996a0fb","defaultCode","$51ce273c1692e987$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$93a9ea042b1bc378$export$3988ae62b71be9a3","$51ce273c1692e987$export$fce0c6cfca85ed96","$51ce273c1692e987$export$51186ad6e864892a","$51ce273c1692e987$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$51ce273c1692e987$var$userProjection","$51ce273c1692e987$export$698f563af1ba02a5","$51ce273c1692e987$export$d4b8ec0b96db1ee2","destProjection","$51ce273c1692e987$export$494be3a3a25689ca","$892afa8da6ff9c56$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$892afa8da6ff9c56$export$f883a24d5edde77c","$6f142810539a59f0$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$6f142810539a59f0$var$getSmoothClampedResolution","$6f142810539a59f0$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$639db43e7a8d515a$export$e20fbacbb41798b","$639db43e7a8d515a$export$f883a24d5edde77c","$9a77576133df9d74$export$929e5a82286172a6","pow","$9a77576133df9d74$export$57636bb43b1ccbb0","$9a77576133df9d74$export$9b47139b511b56e4","$9a77576133df9d74$export$45db2fc2f15997e7","$a0a3dd962f5651db$exports","PROJECTIONS","$c0e91db6b9cdad65$exports","fromEPSG4326","toEPSG4326","$6c33523acda28428$export$2e2bcd8739ae039","$93aa503286cf5212$export$b92b2dedcfff79de","opt_dest","dest","$ea4264a4ff6265c9$var$tmpTransform","$ea4264a4ff6265c9$var$Geometry","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$ea4264a4ff6265c9$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$09aee13076acae13$export$6a4fe494c558c238","rotate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$ea4264a4ff6265c9$export$2e2bcd8739ae039","$873446fe266f67e7$export$6af0c1b4a8549a43","layout","$873446fe266f67e7$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$873446fe266f67e7$export$2e2bcd8739ae039","SimpleGeometry","$873446fe266f67e7$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$873446fe266f67e7$var$getLayoutForStride","anchorX","anchorY","k","$93aa503286cf5212$export$bb628a54ab399bc9","$93aa503286cf5212$export$dcdf75081b88279d","$93aa503286cf5212$export$d73ee8ef04f5226a","$ea4264a4ff6265c9$exports","$72fefbd983bcbe6a$var$assignClosest","offset1","offset2","$72fefbd983bcbe6a$export$bc2eb611ddf80103","squaredDelta","$72fefbd983bcbe6a$export$fbf31c8f2668ed5a","ends","$72fefbd983bcbe6a$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$72fefbd983bcbe6a$export$5a48a0eefcf14992","$c8eff196dbbc07af$export$5c4daf67e03c190f","$c8eff196dbbc07af$export$47c3746a74384d45","coordinatess","opt_ends","jj","$c6bd32c4126fb342$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$c6bd32c4126fb342$export$51a0620f7a28532b","$c6bd32c4126fb342$export$b84e8d2c4920a0c6","$c6bd32c4126fb342$export$60a9904b67f8d51b","simplifiedEnds","$680fff1ff5967196$export$9c0934e4e9c3f61e","opt_coordinates","$680fff1ff5967196$export$cbb9596fc0f40db2","opt_coordinatess","$71997ce93cb9ec89$export$3c5e1905f889266e","twiceArea","$71997ce93cb9ec89$export$7a8ee541dfdf2ed5","$d331075f6abc3caf$export$2e2bcd8739ae039","LinearRing","maxDelta_","maxDeltaRevision_","$d331075f6abc3caf$var$__extends","getArea","$873446fe266f67e7$exports","$e146c4255f752222$export$2e2bcd8739ae039","Point","$e146c4255f752222$var$__extends","$c8eff196dbbc07af$export$60815ead40ec79ab","$a97abfe500512224$export$cedabedc7ac0e138","$a97abfe500512224$export$949a7a3a4b6f34fa","wn","$a97abfe500512224$export$ae868c0f6acc3355","$fbc665810373f014$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$b9216567382fd63e$export$40d8d71841a3d779","coordinatesExtent","ret","$1d929bbb982e7ad1$export$4b80e395e36b5a56","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$09aee13076acae13$export$a6a5a7a461419425","$b9216567382fd63e$export$76dcd8f8f83b6ddb","$b9216567382fd63e$export$830a0dafbb2ef1c5","$765add36bcb2b344$export$741858880c96b18c","tmp","$58c39c2abab0d873$export$318f2842ed17e094","edge","$58c39c2abab0d873$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$58c39c2abab0d873$export$b71b604ddfc778c7","$494141410008044e$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$494141410008044e$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$e146c4255f752222$exports","getLinearRingCount","getLinearRing","$d331075f6abc3caf$exports","getLinearRings","linearRings","$494141410008044e$export$2e2bcd8739ae039","$494141410008044e$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$494141410008044e$export$c16b671815801c75","$494141410008044e$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$494141410008044e$export$87d6a1539a56e47f","getRadius","startAngle","$b61ec8a9c26a15bd$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$b61ec8a9c26a15bd$var$__extends","resolutionConstraintInfo","$b61ec8a9c26a15bd$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","padding","minZoom_","centerConstraint","$b61ec8a9c26a15bd$export$964345001ee9ac52","resolutionConstraint","constraint","rotationConstraint","$b61ec8a9c26a15bd$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$b61ec8a9c26a15bd$export$ee75376562060184","setHint","updateAnimations_","$b61ec8a9c26a15bd$var$animationCallback","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","$51ce273c1692e987$export$96bfd09e2cffb006","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$b61ec8a9c26a15bd$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$494141410008044e$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$6f142810539a59f0$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$6f142810539a59f0$export$22ac0f6b219de91a","theta","opt_tolerance","enableRotation","constrainRotation","$b61ec8a9c26a15bd$export$2e2bcd8739ae039","$0b0c604ff213866b$export$622c471beb1693c7","$0b0c604ff213866b$export$a71a825ff42fb8e1","$e5de9654c10e65fa$export$2e2bcd8739ae039","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$fbe1f30b9b0811de$exports","view","$b61ec8a9c26a15bd$exports","$e5de9654c10e65fa$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$286f240d744f313a$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","$e5de9654c10e65fa$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$308a4eee2e11ac9e$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","parseInt","$2378f1032abec9d1$export$2e2bcd8739ae039","Control","target_","listenerKeys","$2378f1032abec9d1$var$__extends","mapEvent","$a9244539d282f1c5$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$a9244539d282f1c5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$da5bbe25d8fad2eb$export$1e1c9bf5a4ffe0d1","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$2378f1032abec9d1$exports","$1e8af08824c3e884$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$1e8af08824c3e884$var$__extends","resetNorth_","$69299efdbde0e182$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$69299efdbde0e182$var$__extends","zoomByDelta_","currentZoom","newZoom","$fdf462d5ee425342$export$2e2bcd8739ae039","$855af52b0af99805$export$4c486572e961a974","$855af52b0af99805$export$ace321ff2a8016ef","$855af52b0af99805$export$2e2bcd8739ae039","Interaction","setActive","$855af52b0af99805$var$__extends","active","$8685060a4398cf47$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$8685060a4398cf47$var$__extends","stopEvent","shiftKey","$855af52b0af99805$exports","zoomByDelta","$71c992dd435def6e$export$e2a20c553f6c85ce","$71c992dd435def6e$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$71c992dd435def6e$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$71c992dd435def6e$var$isPointerDraggingEvent","$70da2eacd644b700$export$84bf76cd7afc7469","conditions","pass","$70da2eacd644b700$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$70da2eacd644b700$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$70da2eacd644b700$export$d7ddd398f22d79ef","$70da2eacd644b700$export$ba9e5d519bc326ca","$70da2eacd644b700$export$1238ad6b5e7fff70","$70da2eacd644b700$export$fdc892d0d8fe3bfb","$70da2eacd644b700$export$5d31fe68a477cfbb","$70da2eacd644b700$export$e5570ca80cd8fd54","tagName","$70da2eacd644b700$export$abb7acbfa76bf3c4","pointerType","$70da2eacd644b700$export$189f0d593022b199","isPrimary","$a559dc7f92aae2b9$export$2e2bcd8739ae039","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$a559dc7f92aae2b9$var$__extends","centroid","$71c992dd435def6e$exports","update","begin","getDistance","getAngle","centerpx","$d59c9ac61cc50ba7$export$2e2bcd8739ae039","DragRotate","lastAngle_","$d59c9ac61cc50ba7$var$__extends","$3a69a5cd3d9efe81$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$3a69a5cd3d9efe81$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$ee7f737b890585b1$var$DragBoxEventType","$ee7f737b890585b1$export$7053c33c051365ea","DragBoxEvent","$ee7f737b890585b1$var$__extends","$ee7f737b890585b1$export$2e2bcd8739ae039","DragBox","box_","$3a69a5cd3d9efe81$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$8fefcee995bf9fa2$export$2e2bcd8739ae039","DragZoom","out_","out","$8fefcee995bf9fa2$var$__extends","factor","$ee7f737b890585b1$exports","$fabc923eab7b8d35$export$2e2bcd8739ae039","$58983494123aebad$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$58983494123aebad$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$975fb2a1297d8301$export$2e2bcd8739ae039","KeyboardZoom","$975fb2a1297d8301$var$__extends","charCode","charCodeAt","$16f8404d2308a2e3$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$bf6c611fd4e916b8$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$bf6c611fd4e916b8$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$bf6c611fd4e916b8$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$116bb9adf1461407$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$116bb9adf1461407$var$__extends","rotationDelta","touch0","touch1","$59799bb9abb3d845$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$59799bb9abb3d845$var$__extends","scaleDelta","$18255666c21c3e7d$export$2e2bcd8739ae039","Map","$69299efdbde0e182$exports","zoomOptions","$1e8af08824c3e884$exports","rotateOptions","attribution","$a9244539d282f1c5$exports","attributionOptions","$c2f4f7c3a952c48b$export$ebe90cb607ad99e","altShiftDragRotate","$d59c9ac61cc50ba7$exports","doubleClickZoom","$8685060a4398cf47$exports","zoomDelta","zoomDuration","dragPan","$a559dc7f92aae2b9$exports","pinchRotate","$116bb9adf1461407$exports","pinchZoom","$59799bb9abb3d845$exports","keyboard","$58983494123aebad$exports","$975fb2a1297d8301$exports","mouseWheelZoom","$bf6c611fd4e916b8$exports","shiftDragZoom","$8fefcee995bf9fa2$exports","$73908c9ebef59c42$export$ebe90cb607ad99e","$18255666c21c3e7d$var$__extends","$d8a652e4527f1969$exports","$e5de9654c10e65fa$exports","$93650dd9a7608979$export$2e2bcd8739ae039","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","$93650dd9a7608979$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$c2632c8bbff4f1e5$export$2e2bcd8739ae039","ImageBase","$c2632c8bbff4f1e5$var$__extends","getImage","getPixelRatio","$96f1769f0e2cd014$export$2e2bcd8739ae039","$8910981f7733f7b9$export$bc96ecc7c2a50764","image","loadHandler","errorHandler","img","promise","listening_1","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$8910981f7733f7b9$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$c2632c8bbff4f1e5$exports","$479dcb8db4bda8fa$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$479dcb8db4bda8fa$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$8910981f7733f7b9$exports","listenImage","$93650dd9a7608979$exports","$9a1cf96a930d5a58$var$brokenDiagonalRendering_","$288c3ce7a59688cb$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$eca005c166f5ca0a$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$9a1cf96a930d5a58$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","restore","$9a1cf96a930d5a58$var$verifyBrokenDiagonalRendering","$9a1cf96a930d5a58$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$9a1cf96a930d5a58$export$b3890eb0ae9dca99","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$171e0dde495a42af$export$8240f01c446270e6","getImageData","$9a1cf96a930d5a58$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$fb80bc4c69234ab8$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$9a1cf96a930d5a58$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$fb80bc4c69234ab8$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$9cdf987200b0aa45$export$2e2bcd8739ae039","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$f542b78ad7fc0677$export$958e3e1a02eac4b6","opt_tileCoord","$f542b78ad7fc0677$export$92d0df0f1d25c63c","$f542b78ad7fc0677$export$a47fb462a08de82f","$5823c018e97cb242$var$TileCache","TileCache","$5823c018e97cb242$var$__extends","expireCache","pruneExceptNewestZ","Number","$f542b78ad7fc0677$export$a807b7874eb66454","$5823c018e97cb242$export$2e2bcd8739ae039","$4f588e6ca9a89608$export$2e2bcd8739ae039","$6fd1db52bb150087$var$adaptAttributions","attributionLike","$6fd1db52bb150087$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","reject","$6fd1db52bb150087$var$__extends","getContextOptions","refresh","setAttributions","$41c1f55d86eb0ee8$var$TileRange","TileRange","containsTileRange","tileRange","getHeight","getWidth","$41c1f55d86eb0ee8$export$958e3e1a02eac4b6","$41c1f55d86eb0ee8$export$2e2bcd8739ae039","$6986c999812c2763$var$tmpTileCoord","$6986c999812c2763$export$2e2bcd8739ae039","TileGrid","opt_strict","compare","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$b07b4a254fd8c72a$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$b07b4a254fd8c72a$var$resolutionsFromExtent","$b07b4a254fd8c72a$export$ce88871416242df8","$b07b4a254fd8c72a$export$7b5b6ef8fd55fac4","$b07b4a254fd8c72a$export$a251b12f5601c16f","opt_maxResolution","half","$31e561e541184b11$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$5823c018e97cb242$exports","tmpSize","tileOptions","zDirection","$31e561e541184b11$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","$b07b4a254fd8c72a$export$39a9ce3624977b84","$f542b78ad7fc0677$export$60bedf8e3e3c3dbe","updateCacheSize","tileCount","useTile","$6fd1db52bb150087$exports","$31e561e541184b11$export$c571855c51e6c4b6","TileSourceEvent","$31e561e541184b11$export$2e2bcd8739ae039","$6d3f395198882205$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$6d3f395198882205$export$4229b1d9af69b3be","tileUrlFunctions","$f542b78ad7fc0677$export$d6af199866bfb566","$6d3f395198882205$export$2a1fa079bfd73dde","url","urls","exec","startCharCode","stopCharCode","fromCharCode","stop_1","$5625bdab397b8065$export$2e2bcd8739ae039","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","$5625bdab397b8065$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","$31e561e541184b11$exports","setTileLoadFunction","setTileUrlFunction","templates","$6d3f395198882205$export$436f44dbcc31fea3","$3102cb6a48eb7b01$var$TileImage","TileImage","$3102cb6a48eb7b01$var$defaultTileLoadFunction","tileClass","$479dcb8db4bda8fa$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$3102cb6a48eb7b01$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","$fb80bc4c69234ab8$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$5625bdab397b8065$exports","imageTile","$3102cb6a48eb7b01$export$2e2bcd8739ae039","$c7284426848359a1$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$b07b4a254fd8c72a$export$38500bbeccc864ff","$c7284426848359a1$var$__extends","$3102cb6a48eb7b01$exports","$4613e68d4486e86c$export$4de8a5e77eb994ad","$4613e68d4486e86c$export$2e2bcd8739ae039","OSM","$4613e68d4486e86c$var$__extends","$c7284426848359a1$exports","$b8f9ef608258debf$export$2e2bcd8739ae039","$6d613fff339c23be$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$6d613fff339c23be$var$__extends","getPreload","getUseInterimTilesOnError","$94d311d3e85a3c42$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$94d311d3e85a3c42$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","imageState","$70e7b28f28588a87$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$70e7b28f28588a87$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","err","Uint8Array","$94d311d3e85a3c42$exports","$4d5b4b2ec243336c$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$4d5b4b2ec243336c$var$__extends","isDrawableTile","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","globalAlpha","frameState1","tileSource1","postRenderFunction","opt_tileCallback","$70e7b28f28588a87$exports","$4d5b4b2ec243336c$export$2e2bcd8739ae039","$9af931ecc3f060e8$export$2e2bcd8739ae039","TileLayer","$9af931ecc3f060e8$var$__extends","$4d5b4b2ec243336c$exports","$6d613fff339c23be$exports","$4563bee86127df89$export$2e2bcd8739ae039","$b744705bb687ea19$export$c202e3cb8db99a95","uri","params","keyParams","encodeURIComponent","qs","$ae85fe8cb6d3f3c3$var$WMTSTileGrid","WMTSTileGrid","matrixIds_","matrixIds","$ae85fe8cb6d3f3c3$var$__extends","getMatrixId","getMatrixIds","$ae85fe8cb6d3f3c3$export$435b228518a973ff","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","substr","elt","elt_ml","tileWidth","tileHeight","$cc6dea2645012e7c$export$2e2bcd8739ae039","WMTS","requestEncoding","version_","version","format_","format","dimensions_","dimensions","matrixSet_","style_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","$cc6dea2645012e7c$var$__extends","getDimensions","getFormat","getMatrixSet","getRequestEncoding","getStyle","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","p","localContext_1","TileMatrix","TileCol","TileRow","$cc6dea2645012e7c$export$6a2b1d2e791d254c","wmtsCap","config","tileMatrixSets","supportedCRS","proj1","proj2","matrixSetObj","projConfig","matrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","$ae85fe8cb6d3f3c3$exports","createFromCapabilitiesMatrixSet","gets","encodings","$75d62620b3afd51d$export$b089dda0fde13047","normalizeWhitespace","$75d62620b3afd51d$export$caa0047a9c11e135","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","$75d62620b3afd51d$export$18ed2f5932a1b385","valueReader","objectStack","$75d62620b3afd51d$export$145ce5485ab74220","opt_property","localName","$75d62620b3afd51d$export$b69a91976ee81208","$75d62620b3afd51d$export$7989129829daaabf","opt_nodeName1","opt_namespaceURI","fixedNodeName","opt_nodeName","nodeName","namespaceURI","qualifiedName","$75d62620b3afd51d$export$f65ca476c09acec0","createElementNS","$75d62620b3afd51d$export$7094a064528c7fee","$75d62620b3afd51d$export$c6eb0402f939765f","namespaceURIs","structure","opt_structureNS","structureNS","$75d62620b3afd51d$export$5c934df85741dbd1","parsersNS","nextElementSibling","parsers","parser","$75d62620b3afd51d$export$dc8ce45ce1679f4f","$75d62620b3afd51d$var$document_","implementation","createDocument","$153896779750f972$export$2e2bcd8739ae039","XML","read","xml","DOMParser","parseFromString","readFromDocument","readFromNode","ELEMENT_NODE","$04d0213b4cd6e67f$export$40bb929053d4012c","getAttributeNS","$356226ef6de842fd$export$6161a72ab5b6b722","s","$356226ef6de842fd$export$dda73877cb166cd3","trim","$8c3ae19bb47a4e41$var$NAMESPACE_URIS","$8c3ae19bb47a4e41$var$PARSERS","ServiceIdentification","$8c3ae19bb47a4e41$var$SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","$8c3ae19bb47a4e41$var$SERVICE_PROVIDER_PARSERS","OperationsMetadata","$8c3ae19bb47a4e41$var$OPERATIONS_METADATA_PARSERS","$8c3ae19bb47a4e41$var$OWS","OWS","$8c3ae19bb47a4e41$var$__extends","owsObject","$8c3ae19bb47a4e41$var$ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","$8c3ae19bb47a4e41$var$ALLOWED_VALUES_PARSERS","Value","$8c3ae19bb47a4e41$var$CONSTRAINT_PARSERS","AllowedValues","$8c3ae19bb47a4e41$var$CONTACT_INFO_PARSERS","Phone","$8c3ae19bb47a4e41$var$PHONE_PARSERS","Address","$8c3ae19bb47a4e41$var$DCP_PARSERS","HTTP","$8c3ae19bb47a4e41$var$HTTP_PARSERS","Get","href","$8c3ae19bb47a4e41$var$REQUEST_METHOD_PARSERS","Post","$8c3ae19bb47a4e41$var$OPERATION_PARSERS","DCP","Operation","getAttribute","Voice","Facsimile","Constraint","$8c3ae19bb47a4e41$var$SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","$8c3ae19bb47a4e41$export$2e2bcd8739ae039","$c513b1f7088ee2ce$var$NAMESPACE_URIS","$c513b1f7088ee2ce$var$OWS_NAMESPACE_URIS","$c513b1f7088ee2ce$var$PARSERS","Contents","$c513b1f7088ee2ce$var$CONTENTS_PARSERS","$c513b1f7088ee2ce$var$WMTSCapabilities","WMTSCapabilities","owsParser_","$8c3ae19bb47a4e41$exports","$c513b1f7088ee2ce$var$__extends","WMTSCapabilityObject","$c513b1f7088ee2ce$var$LAYER_PARSERS","TileMatrixSet","$c513b1f7088ee2ce$var$TMS_PARSERS","Style","$c513b1f7088ee2ce$var$STYLE_PARSERS","isDefault","TileMatrixSetLink","$c513b1f7088ee2ce$var$TMS_LINKS_PARSERS","Dimension","$c513b1f7088ee2ce$var$DIMENSION_PARSERS","ResourceURL","resourceType","resource","WGS84BoundingBox","$c513b1f7088ee2ce$var$readBoundingBox","LegendURL","legend","TileMatrixSetLimits","$c513b1f7088ee2ce$var$TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","$c513b1f7088ee2ce$var$TMS_LIMITS_PARSERS","Default","$c513b1f7088ee2ce$var$WGS84_BBOX_READERS","LowerCorner","$c513b1f7088ee2ce$var$readCoordinates","UpperCorner","WellKnownScaleSet","$c513b1f7088ee2ce$var$TM_PARSERS","SupportedCRS","BoundingBox","$c513b1f7088ee2ce$export$2e2bcd8739ae039","$913d29e58b818220$var$parser","$c513b1f7088ee2ce$exports","fetch","response","$cc6dea2645012e7c$exports","optionsFromCapabilities","$18255666c21c3e7d$exports","$9af931ecc3f060e8$exports","$4613e68d4486e86c$exports"],"version":3,"file":"index.31074667.js.map"}